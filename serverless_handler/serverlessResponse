{ ctx:
   ServerlessResponse {
     domain:
      Domain {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        members: [] },
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: false,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket:
      Writable {
        _writableState: [Object],
        writable: true,
        _write: [Function: write],
        domain: [Object],
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        _httpMessage: [Circular] },
     connection:
      Writable {
        _writableState: [Object],
        writable: true,
        _write: [Function: write],
        domain: [Object],
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        _httpMessage: [Circular] },
     _header: null,
     _onPendingData: [Function: noopPendingOutput],
     _sent100: false,
     _expect_continue: false,
     write: [Function],
     [Symbol(outHeadersKey)]: {},
     [Symbol()]: [],
     [Symbol()]: {} } }